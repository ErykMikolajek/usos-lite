// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcPracownik.Data;

#nullable disable

namespace lab10.Migrations
{
    [DbContext(typeof(MvcPracownikContext))]
    partial class MvcPracownikContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("MvcPracownik.Models.Budynek", b =>
                {
                    b.Property<int>("Id_zajec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_zajec");

                    b.ToTable("Budynek");
                });

            modelBuilder.Entity("MvcPracownik.Models.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataZatrudnienia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ZajeciaId_zajec")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ZajeciaId_zajec");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("MvcPracownik.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataZatrudnienia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("MvcPracownik.Models.Zajecia", b =>
                {
                    b.Property<int>("Id_zajec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BudynekId_zajec")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_zajec");

                    b.HasIndex("BudynekId_zajec");

                    b.ToTable("Zajecia");
                });

            modelBuilder.Entity("StudentZajecia", b =>
                {
                    b.Property<int>("StudenciId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ZajeciaId_zajec")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudenciId", "ZajeciaId_zajec");

                    b.HasIndex("ZajeciaId_zajec");

                    b.ToTable("StudentZajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Pracownik", b =>
                {
                    b.HasOne("MvcPracownik.Models.Zajecia", "Zajecia")
                        .WithMany("Pracownicy")
                        .HasForeignKey("ZajeciaId_zajec");

                    b.Navigation("Zajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Zajecia", b =>
                {
                    b.HasOne("MvcPracownik.Models.Budynek", "Budynek")
                        .WithMany("Zajecia")
                        .HasForeignKey("BudynekId_zajec");

                    b.Navigation("Budynek");
                });

            modelBuilder.Entity("StudentZajecia", b =>
                {
                    b.HasOne("MvcPracownik.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcPracownik.Models.Zajecia", null)
                        .WithMany()
                        .HasForeignKey("ZajeciaId_zajec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MvcPracownik.Models.Budynek", b =>
                {
                    b.Navigation("Zajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Zajecia", b =>
                {
                    b.Navigation("Pracownicy");
                });
#pragma warning restore 612, 618
        }
    }
}
