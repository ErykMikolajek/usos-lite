// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcPracownik.Data;

#nullable disable

namespace lab10.Migrations
{
    [DbContext(typeof(MvcPracownikContext))]
    [Migration("20230531161114_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("MvcPracownik.Models.Budynek", b =>
                {
                    b.Property<int>("Id_budynku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_budynku");

                    b.ToTable("Budynek");
                });

            modelBuilder.Entity("MvcPracownik.Models.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataZatrudnienia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ZajeciaId_zajec")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ZajeciaId_zajec");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("MvcPracownik.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataOfStudiesStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("MvcPracownik.Models.Student_Zajecia", b =>
                {
                    b.Property<int>("Student_Zajecia_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("studentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("zajeciaId_zajec")
                        .HasColumnType("INTEGER");

                    b.HasKey("Student_Zajecia_ID");

                    b.HasIndex("studentId");

                    b.HasIndex("zajeciaId_zajec");

                    b.ToTable("Student_Zajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Zajecia", b =>
                {
                    b.Property<int>("Id_zajec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BudynekId_budynku")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_zajec");

                    b.HasIndex("BudynekId_budynku");

                    b.ToTable("Zajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Pracownik", b =>
                {
                    b.HasOne("MvcPracownik.Models.Zajecia", "Zajecia")
                        .WithMany("Pracownicy")
                        .HasForeignKey("ZajeciaId_zajec");

                    b.Navigation("Zajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Student_Zajecia", b =>
                {
                    b.HasOne("MvcPracownik.Models.Student", "student")
                        .WithMany("student_Zajecia")
                        .HasForeignKey("studentId");

                    b.HasOne("MvcPracownik.Models.Zajecia", "zajecia")
                        .WithMany("student_Zajecia")
                        .HasForeignKey("zajeciaId_zajec");

                    b.Navigation("student");

                    b.Navigation("zajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Zajecia", b =>
                {
                    b.HasOne("MvcPracownik.Models.Budynek", "Budynek")
                        .WithMany("Zajecia")
                        .HasForeignKey("BudynekId_budynku");

                    b.Navigation("Budynek");
                });

            modelBuilder.Entity("MvcPracownik.Models.Budynek", b =>
                {
                    b.Navigation("Zajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Student", b =>
                {
                    b.Navigation("student_Zajecia");
                });

            modelBuilder.Entity("MvcPracownik.Models.Zajecia", b =>
                {
                    b.Navigation("Pracownicy");

                    b.Navigation("student_Zajecia");
                });
#pragma warning restore 612, 618
        }
    }
}
